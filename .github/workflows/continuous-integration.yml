name: 🚦 Continuous Integration

on:
  push:
    branches: [main]
    paths:
      - 'action/**'
      - 'tests/**'
  pull_request:
    paths:
      - 'action/**'
      - 'tests/**'

jobs:
  tests:
    name: 🧪 Tests & Coverage
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 🛒 Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: 📦 Install test dependencies
        run: |
          pip install coverage packaging

      - name: 🧪 Run tests with coverage
        run: |
          echo "Running tests with coverage..."
          coverage run -m unittest discover tests
          echo "Tests completed. Generating coverage report..."
          coverage report -m > coverage.txt
          echo "Coverage report generated."

      - name: 🏅 Extract coverage percentage and generate badge
        run: |
          echo "Generating coverage badge..."
          mkdir -p badges
          PERCENT=$(coverage report | grep TOTAL | awk '{print $4}' | sed 's/%//')
          PERCENT=${PERCENT%.*}
          if [ "$PERCENT" -ge 90 ]; then COLOR="brightgreen"
          elif [ "$PERCENT" -ge 75 ]; then COLOR="orange"
          else COLOR="red"
          fi
          curl -o badges/coverage.svg "https://img.shields.io/badge/Coverage-${PERCENT}%25-${COLOR}.svg"
          echo "Coverage percentage: $PERCENT%"
          echo "Badge successfully generated"

      - name: 🚀 Commit coverage badge
        run: |
          echo "Committing coverage badge..."
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          if [ -n "$(git status --porcelain badges/coverage.svg)" ]; then
            echo "🔍 Changes detected in badge. Committing..."
            # Determine the branch to push to
            if [ "${{ github.event_name }}" = "pull_request" ]; then
              BRANCH="${{ github.head_ref }}"
            else
              BRANCH="${{ github.ref_name }}"
            fi
            git add badges/coverage.svg
            git commit -m "Update coverage badge [skip ci]"
            echo "🔄 Pushing changes to $BRANCH"
            git push origin ${{ github.ref }}
            echo "✅ Badge pushed to $BRANCH"
          else
            echo "🟢 No changes to commit"
          fi
